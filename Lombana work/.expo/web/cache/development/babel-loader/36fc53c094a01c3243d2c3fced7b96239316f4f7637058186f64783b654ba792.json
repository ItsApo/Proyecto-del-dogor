{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { login_styles, styles } from \"../assets/css/login_styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messageColor = _useState10[0],\n    setMessageColor = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    accounts = _useState12[0],\n    setAccounts = _useState12[1];\n  var createAccount = function createAccount() {\n    if (username === \"\" || name === \"\" || password === \"\") {\n      setMessage(\"Debes ingresar todos los campos.\");\n      setMessageColor(false);\n    } else {\n      var account = {\n        username: username,\n        name: name,\n        password: password\n      };\n      setAccounts([].concat(_toConsumableArray(accounts), [account]));\n      clearInputs();\n      setMessage(\"Cuenta creada exitosamente.\");\n      setMessageColor(true);\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setUsername(\"\");\n    setName(\"\");\n    setPassword(\"\");\n  };\n  return _jsx(View, {\n    style: login_style.container,\n    children: _jsxs(View, {\n      style: lgin_style.login_container,\n      children: [_jsxs(View, {\n        style: login_stylesgin_style.input_container,\n        children: [_jsx(TextInput, {\n          style: login_style.input,\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          },\n          value: username,\n          placeholder: \"Username\"\n        }), _jsx(TextInput, {\n          style: login_style.input,\n          onChangeText: function onChangeText(text) {\n            return setName(text);\n          },\n          value: name,\n          placeholder: \"Name\"\n        }), _jsx(TextInput, {\n          style: login_style.input,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          value: password,\n          placeholder: \"Password\",\n          secureTextEntry: true\n        })]\n      }), _jsx(View, {\n        style: login_style.button_container,\n        children: _jsx(Button, {\n          title: \"Crear cuenta\",\n          color: \"#080808\",\n          onPress: createAccount\n        })\n      }), _jsx(Text, {\n        style: [login_style.message, {\n          color: messageColor ? 'green' : 'red'\n        }],\n        children: message\n      })]\n    })\n  });\n}\n;","map":{"version":3,"names":["useState","useEffect","TextInput","Button","View","Text","login_styles","styles","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","name","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","_useState9","_useState10","messageColor","setMessageColor","_useState11","_useState12","accounts","setAccounts","createAccount","account","concat","_toConsumableArray","clearInputs","style","login_style","container","children","lgin_style","login_container","login_stylesgin_style","input_container","input","onChangeText","text","value","placeholder","secureTextEntry","button_container","title","color","onPress"],"sources":["C:/Users/jf25s/OneDrive/Escritorio/Trabajos de moviles III/momento2/momento2/components/login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { TextInput, Button, View, Text } from \"react-native\";\r\n\r\nimport {login_styles, styles} from \"../assets/css/login_styles\"\r\n\r\n//Realizamos las importaciones respectivas para este proyecto, llamando desde el assets, los estilos\r\n\r\n\r\nexport default function Login({navigation}){ const [username, setUsername] = useState('');\r\nconst [name, setName] = useState('');\r\nconst [password, setPassword] = useState('');\r\nconst [message, setMessage] = useState(''); \r\nconst [messageColor, setMessageColor] = useState(false); \r\nconst [accounts, setAccounts] = useState([]) // Array para guardar las cuentas creadas\r\n\r\n\r\n// FunciÃ³n para crear cuenta\r\n\r\nconst createAccount = () => {\r\n    \r\n    if (username === \"\" || name === \"\" || password === \"\") {\r\n\r\n        setMessage(\"Debes ingresar todos los campos.\")\r\n        setMessageColor(false);\r\n\r\n    } else {\r\n\r\n        const account = { username, name, password }; // Crear un objeto con los datos de la cuenta\r\n        setAccounts([...accounts, account]); // Agregar el objeto de la cuenta al array\r\n        clearInputs();\r\n        setMessage(\"Cuenta creada exitosamente.\")\r\n        setMessageColor(true);\r\n    } \r\n};\r\n\r\n\r\n\r\n/*\r\n\r\nImprimir el array de \"accounts\" en la consola\r\n\r\nuseEffect(() => {\r\n    console.log(accounts);\r\n}, [accounts]);\r\n\r\n*/\r\n\r\nconst clearInputs = () => {\r\n    setUsername(\"\");\r\n    setName(\"\");\r\n    setPassword(\"\");\r\n};\r\n\r\nreturn (\r\n\r\n    <View style={login_style.container}>\r\n\r\n        <View style={lgin_style.login_container}>\r\n            \r\n            <View style={login_stylesgin_style.input_container}>\r\n\r\n                {/* Input Username */}\r\n\r\n                <TextInput \r\n                    style={login_style.input}\r\n                    onChangeText={(text) => setUsername(text)}\r\n                    value={username}\r\n                    placeholder=\"Username\"\r\n                />\r\n\r\n                {/* Input Name */}\r\n\r\n                <TextInput \r\n                    style={login_style.input}\r\n                    onChangeText={(text) => setName(text)}\r\n                    value={name}\r\n                    placeholder=\"Name\"\r\n                />    \r\n                \r\n                {/* Input Password */}\r\n\r\n                <TextInput \r\n                    style={login_style.input}\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                    secureTextEntry={true}\r\n                />   \r\n\r\n            </View>\r\n\r\n            <View style={login_style.button_container}> \r\n\r\n                {/* Boton Crear cuenta */}\r\n\r\n                <Button\r\n                    title=\"Crear cuenta\"\r\n                    color=\"#080808\"\r\n                    onPress={createAccount}\r\n                >\r\n\r\n                </Button>\r\n\r\n            </View>\r\n\r\n            {/* Mensaje de exito o error */}\r\n\r\n            <Text style={[login_style.message, {color: messageColor ? 'green' : 'red'}]}>{message}</Text> \r\n\r\n        </View>\r\n\r\n    </View>\r\n\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}