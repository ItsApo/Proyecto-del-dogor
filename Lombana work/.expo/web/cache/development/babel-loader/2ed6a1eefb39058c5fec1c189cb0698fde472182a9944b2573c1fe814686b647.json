{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-native-paper\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\nimport { car_style } from \"../assets/css/car_styles\";\nimport { useAppContext } from \"../AppContexts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CarScreen() {\n  var _useAppContext = useAppContext(),\n    cars = _useAppContext.cars,\n    setCars = _useAppContext.setCars;\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    plateNumber = _useState2[0],\n    setPlateNumber = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    brand = _useState4[0],\n    setBrand = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    messageColor = _useState8[0],\n    setMessageColor = _useState8[1];\n  var saveCar = function saveCar() {\n    if (plateNumber === \"\" || brand === \"\") {\n      setMessage(\"Debes ingresar todos los campos\");\n      setMessageColor(false);\n    } else if (!/^[a-zA-Z0-9]+$/.test(plateNumber)) {\n      setMessage(\"La placa del automovil solo puede contener letras o números\");\n      setMessageColor(false);\n    } else if (cars.some(function (car) {\n      return car.plateNumber === plateNumber;\n    })) {\n      setMessage(\"La placa del automovil ya existe\");\n      setMessageColor(false);\n    } else {\n      var car = {\n        plateNumber: plateNumber,\n        brand: brand,\n        state: true\n      };\n      setCars([].concat(_toConsumableArray(cars), [car]));\n      clearInputs();\n      setMessage(\"Automovil agregado con exito\");\n      setMessageColor(true);\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setPlateNumber(\"\");\n    setBrand(\"\");\n  };\n  return _jsx(View, {\n    style: car_style.container,\n    children: _jsxs(View, {\n      style: car_style.form_container,\n      children: [_jsx(Text, {\n        style: car_style.title,\n        children: \"REGISTRAR VEHICULO\"\n      }), _jsxs(View, {\n        style: car_style.input_container,\n        children: [_jsx(Image, {\n          source: require(\"../assets/images/supra.jpg\"),\n          style: c_style.image\n        }), _jsx(Image, {\n          source: require(\"../assets/images/nissan.jpg\"),\n          style: rent_style.image2\n        }), _jsx(Text, {\n          style: car_style.input_text,\n          children: \"Numero de placa\"\n        }), _jsx(TextInput, {\n          style: car_style.input,\n          onChangeText: function onChangeText(text) {\n            return setPlateNumber(text);\n          },\n          value: plateNumber\n        }), _jsx(Text, {\n          style: car_style.input_text,\n          children: \"Marca del vehiculo\"\n        }), _jsx(TextInput, {\n          style: car_style.input,\n          onChangeText: function onChangeText(text) {\n            return setBrand(text);\n          },\n          value: brand\n        })]\n      }), _jsxs(View, {\n        style: car_style.button_container,\n        children: [_jsxs(View, {\n          style: car_style.row_button_container,\n          children: [_jsx(Button, {\n            style: _objectSpread(_objectSpread({}, car_style.button), {}, {\n              backgroundColor: '#000000'\n            }),\n            textColor: \"#ffffff\",\n            onPress: saveCar,\n            children: \"Guardar\"\n          }), _jsx(Button, {\n            style: _objectSpread(_objectSpread({}, car_style.button), {}, {\n              backgroundColor: '#000000'\n            }),\n            textColor: \"#ffffff\",\n            onPress: function onPress() {\n              return navigation.navigate('CarList', setMessage(\"\"));\n            },\n            children: \"Ver lista\"\n          })]\n        }), _jsx(Button, {\n          style: car_style.button,\n          textColor: \"#ffffff\",\n          onPress: function onPress() {\n            return navigation.navigate('Rent', setMessage(\"\"));\n          },\n          children: \"Rentar un vehiculo\"\n        }), _jsx(Button, {\n          style: car_style.button,\n          textColor: \"#ffffff\",\n          onPress: function onPress() {\n            return navigation.navigate('Login', setMessage(\"\"));\n          },\n          children: \"Cerrar sesi\\xF3n\"\n        })]\n      }), _jsx(Text, {\n        style: [car_style.message, {\n          color: messageColor ? 'green' : 'red'\n        }],\n        children: message\n      })]\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","Button","TextInput","View","Text","useNavigation","car_style","useAppContext","jsx","_jsx","jsxs","_jsxs","CarScreen","_useAppContext","cars","setCars","navigation","_useState","_useState2","_slicedToArray","plateNumber","setPlateNumber","_useState3","_useState4","brand","setBrand","_useState5","_useState6","message","setMessage","_useState7","_useState8","messageColor","setMessageColor","saveCar","test","some","car","state","concat","_toConsumableArray","clearInputs","style","container","children","form_container","title","input_container","Image","source","require","c_style","image","rent_style","image2","input_text","input","onChangeText","text","value","button_container","row_button_container","_objectSpread","button","backgroundColor","textColor","onPress","navigate","color"],"sources":["C:/Users/jf25s/OneDrive/Escritorio/Trabajos de moviles III/momento2/momento2/components/car.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { Button } from \"react-native-paper\";\r\nimport { TextInput, View, Text } from \"react-native\";\r\n\r\nimport { useNavigation } from '@react-navigation/native'; // Importamos la navegación \"navigation\"\r\n\r\nimport { car_style } from \"../assets/css/car_styles\"; // Importamos el \"car_styles\", de la carpeta \"assets/css\"\r\n\r\nimport { useAppContext } from \"../AppContexts\"; // Importa el contexto\r\n\r\nexport default function CarScreen() {\r\n    \r\n    const { cars, setCars } = useAppContext(); // Accede a los datos compartidos desde el contexto\r\n\r\n    const navigation = useNavigation(); // Inicializamos la variable de navegación\r\n\r\n    const [plateNumber, setPlateNumber] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [message, setMessage] = useState(''); \r\n    const [messageColor, setMessageColor] = useState(false); \r\n\r\n    // Función para guardar los vehiculos\r\n\r\n    const saveCar = () => {\r\n        \r\n        if (plateNumber === \"\" || brand === \"\") {\r\n\r\n            setMessage(\"Debes ingresar todos los campos\");\r\n            setMessageColor(false);\r\n\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(plateNumber)) {\r\n\r\n            setMessage(\"La placa del automovil solo puede contener letras o números\");\r\n            setMessageColor(false);\r\n\r\n        } else if (cars.some((car) => car.plateNumber === plateNumber)) {\r\n\r\n            setMessage(\"La placa del automovil ya existe\");\r\n            setMessageColor(false);\r\n\r\n        } else {\r\n\r\n            const car = { plateNumber, brand, state: true }; // Inicializa el estado como true\r\n            setCars([...cars, car]); // Agregar el objeto del automóvil al array\r\n            clearInputs();\r\n            setMessage(\"Automovil agregado con exito\");\r\n            setMessageColor(true);\r\n        }\r\n    };\r\n\r\n    // Función para limpiar los campos\r\n\r\n    const clearInputs = () => {\r\n        setPlateNumber(\"\");\r\n        setBrand(\"\");\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n\r\n        <View style={car_style.container}>\r\n\r\n            \r\n\r\n            <View style={car_style.form_container}>\r\n                {/* Titulo de la página */}\r\n\r\n            <Text style={car_style.title}>REGISTRAR VEHICULO</Text>\r\n\r\n                <View style={car_style.input_container}>\r\n                <Image \r\n\r\n                    source={require('../assets/images/supra.jpg')}\r\n                    style={c_style.image} // Establece el ancho y alto de la imagen según tus necesidades\r\n\r\n                    /> \r\n\r\n                    <Image \r\n\r\n                    source={require('../assets/images/nissan.jpg')}\r\n                    style={rent_style.image2} // Establece el ancho y alto de la imagen según tus necesidades\r\n\r\n                    /> \r\n\r\n                    {/* Input Plate Number */}\r\n\r\n                    <Text style={car_style.input_text}>Numero de placa</Text>\r\n\r\n                    <TextInput \r\n                        style={car_style.input}\r\n                        onChangeText={(text) => setPlateNumber(text)}\r\n                        value={plateNumber}\r\n                    />\r\n\r\n                    {/* Input Brand */}\r\n\r\n                    <Text style={car_style.input_text}>Marca del vehiculo</Text>\r\n\r\n                    <TextInput \r\n                        style={car_style.input}\r\n                        onChangeText={(text) => setBrand(text)}\r\n                        value={brand}\r\n                    />    \r\n\r\n                </View>\r\n\r\n                <View style={car_style.button_container}> \r\n\r\n                    <View style={car_style.row_button_container}>\r\n\r\n                        {/* Boton Guardar vehiculo */}\r\n\r\n                        <Button\r\n                            style={{...car_style.button, backgroundColor: '#000000'}}\r\n                            textColor=\"#ffffff\"\r\n                            onPress={saveCar}\r\n                        >\r\n                            Guardar\r\n                        </Button>\r\n\r\n                        {/* Boton Ver listado de vehiculos */}\r\n\r\n                        <Button\r\n                            style={{...car_style.button, backgroundColor: '#000000'}}\r\n                            textColor=\"#ffffff\"\r\n                            onPress={() => navigation.navigate('CarList', setMessage(\"\"))} \r\n                        >\r\n                            Ver lista\r\n                        </Button>      \r\n\r\n                    </View>           \r\n\r\n                    {/* Boton Rent */}\r\n\r\n                    <Button\r\n                        style={car_style.button}\r\n                        textColor=\"#ffffff\"\r\n                        onPress={() => navigation.navigate('Rent', setMessage(\"\"))} \r\n                    >\r\n                        Rentar un vehiculo\r\n                    </Button>   \r\n\r\n                    {/* Boton Volver */}\r\n\r\n                    <Button\r\n                        style={car_style.button}\r\n                        textColor=\"#ffffff\"\r\n                        onPress={() => navigation.navigate('Login',  setMessage(\"\"))}\r\n                    >\r\n                        Cerrar sesión\r\n                    </Button>\r\n\r\n                </View>\r\n                 {/* Mensaje de exito o error */}\r\n            \r\n            <Text style={[car_style.message, {color: messageColor ? 'green' : 'red'}]}>{message}</Text> \r\n\r\n            </View>\r\n\r\n           \r\n\r\n        </View>\r\n\r\n    )\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}