{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { login_styles, styles } from \"../assets/css/login_styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    messageColor = _useState10[0],\n    setMessageColor = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    accounts = _useState12[0],\n    setAccounts = _useState12[1];\n  var createAccount = function createAccount() {\n    if (username === \"\" || name === \"\" || password === \"\") {\n      setMessage(\"Debes ingresar todos los campos.\");\n      setMessageColor(false);\n    } else {\n      var account = {\n        username: username,\n        name: name,\n        password: password\n      };\n      setAccounts([].concat(_toConsumableArray(accounts), [account]));\n      setMessage(\"Cuenta creada exitosamente.\");\n      setMessageColor(true);\n    }\n  };\n  var celarInputs = function celarInputs() {\n    setUsername(\"\");\n    setName(\"\");\n    setPassword(\"\");\n  };\n  return _jsxs(View, {\n    style: login_styles.container,\n    children: [_jsx(TextInput, {\n      style: login_styles.input,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username,\n      placeholder: \"Username\"\n    }), _jsx(TextInput, {\n      style: login_styles.input,\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      },\n      value: name,\n      placeholder: \"Name\"\n    }), _jsx(TextInput, {\n      style: login_styles.input,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password,\n      placeholder: \"Password\",\n      secureTextEntry: true\n    }), _jsx(Button, {\n      style: login_styles.button,\n      title: \"Crear cuenta\",\n      onPress: createAccount,\n      children: \"Crear cuenta\"\n    }), _jsx(Text, {\n      style: [login_styles.message, {\n        color: messageColor ? 'green' : 'red'\n      }],\n      children: message\n    })]\n  });\n}\n;","map":{"version":3,"names":["useState","useEffect","TextInput","Button","View","Text","login_styles","styles","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","name","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","message","setMessage","_useState9","_useState10","messageColor","setMessageColor","_useState11","_useState12","accounts","setAccounts","createAccount","account","concat","_toConsumableArray","celarInputs","style","container","children","input","onChangeText","text","value","placeholder","secureTextEntry","button","title","onPress","color"],"sources":["C:/Users/jf25s/OneDrive/Escritorio/Trabajos de moviles III/momento2/momento2/components/login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { TextInput, Button, View, Text } from \"react-native\";\r\n\r\nimport {login_styles, styles} from \"../assets/css/login_styles\"\r\n\r\n//Realizamos las importaciones respectivas para este proyecto, llamando desde el assets, los estilos\r\n\r\n\r\nexport default function Login({navigation}){\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState(''); \r\n    const [messageColor, setMessageColor] = useState(false); \r\n    const [accounts, setAccounts] = useState([]) // Array para guardar las cuentas creadas\r\n    \r\n    const createAccount = () => {\r\n        \r\n        if (username === \"\" || name === \"\" || password === \"\") {\r\n\r\n            setMessage(\"Debes ingresar todos los campos.\")\r\n            setMessageColor(false);\r\n\r\n        } else {\r\n\r\n            const account = { username, name, password }; // Crear un objeto con los datos de la cuenta\r\n            setAccounts([...accounts, account]); // Agregar el objeto de la cuenta al array\r\n            setMessage(\"Cuenta creada exitosamente.\")\r\n            setMessageColor(true);\r\n            \r\n        } \r\n    };\r\n\r\n    /*\r\n\r\n    Imprimir el array de \"accounts\" en la consola\r\n\r\n    useEffect(() => {\r\n        console.log(accounts);\r\n    }, [accounts]);\r\n\r\n    */\r\n\r\n    const celarInputs = () => {\r\n        setUsername(\"\");\r\n        setName(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    return (\r\n\r\n        <View style={login_styles.container}>\r\n\r\n            {/* Input Nombre de usuario */}\r\n\r\n            <TextInput \r\n                style={login_styles.input}\r\n                onChangeText={(text) => setUsername(text)}\r\n                value={username}\r\n                placeholder=\"Username\"\r\n            />\r\n\r\n            {/* Input Nombre */}\r\n\r\n            <TextInput \r\n                style={login_styles.input}\r\n                onChangeText={(text) => setName(text)}\r\n                value={name}\r\n                placeholder=\"Name\"\r\n            />    \r\n            \r\n            {/* Input Contrase√±a */}\r\n\r\n            <TextInput \r\n                style={login_styles.input}\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                secureTextEntry={true}\r\n            />   \r\n\r\n            {/* Boton Crear cuenta */}\r\n\r\n            <Button\r\n                style={login_styles.button}\r\n                title=\"Crear cuenta\"\r\n                onPress={createAccount}\r\n            >\r\n                Crear cuenta\r\n            </Button>\r\n\r\n            <Text style={[login_styles.message, {color: messageColor ? 'green' : 'red'}]}>{message}</Text>\r\n\r\n       </View>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}