{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, IconButton } from \"react-native-paper\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { login_style } from \"../assets/css/login_styles\";\nimport { useAppContext } from \"../AppContexts\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useAppContext = useAppContext(),\n    accounts = _useAppContext.accounts,\n    setAccounts = _useAppContext.setAccounts;\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    name = _useState4[0],\n    setName = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    message = _useState10[0],\n    setMessage = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    messageColor = _useState12[0],\n    setMessageColor = _useState12[1];\n  var createAccount = function createAccount() {\n    if (user === \"\" || name === \"\" || password === \"\") {\n      setMessage(\"Debes ingresar todos los campos\");\n      setMessageColor(false);\n    } else if (!/^[a-zA-Z0-9]+$/.test(user)) {\n      setMessage(\"El usuario solo puede contener letras y números\");\n      setMessageColor(false);\n    } else if (!/^[a-zA-Z\\s]+$/.test(name)) {\n      setMessage(\"El nombre solo puede contener letras y espacios\");\n      setMessageColor(false);\n    } else if (!/[a-zA-Z]/.test(password) || !/[0-9]/.test(password)) {\n      setMessage(\"La contraseña debe contener letras y números\");\n      setMessageColor(false);\n    } else if (accounts.some(function (account) {\n      return account.user === user;\n    })) {\n      setMessage(\"El usuario ya existe\");\n      setMessageColor(false);\n    } else {\n      var account = {\n        user: user,\n        name: name,\n        password: password\n      };\n      setAccounts([].concat(_toConsumableArray(accounts), [account]));\n      clearInputs();\n      setMessage(\"Cuenta creada exitosamente\");\n      setMessageColor(true);\n    }\n  };\n  var singIn = function singIn() {\n    var account = accounts.find(function (account) {\n      return account.user === user && account.password === password;\n    });\n    if (user === \"\" || password === \"\") {\n      setMessage(\"Debes ingresar el usuario y contraseña\");\n      setMessageColor(false);\n    } else if (account) {\n      clearInputs();\n      setMessage(\"\");\n      navigation.navigate('Car');\n    } else {\n      setMessage(\"El usuario no existe\");\n      setMessageColor(false);\n    }\n  };\n  var clearInputs = function clearInputs() {\n    setUser(\"\");\n    setName(\"\");\n    setPassword(\"\");\n  };\n  return _jsxs(View, {\n    style: login_style.container,\n    children: [_jsxs(View, {\n      style: login_style.login_container,\n      children: [_jsx(Image, {\n        source: require(\"../assets/images/supra.jpg\"),\n        style: login_style.image\n      }), _jsxs(View, {\n        style: login_style.input_container,\n        children: [_jsx(Text, {\n          style: login_style.input_text,\n          children: \"Usuario\"\n        }), _jsx(TextInput, {\n          style: login_style.input,\n          onChangeText: function onChangeText(text) {\n            return setUser(text);\n          },\n          value: user\n        }), _jsx(Text, {\n          style: login_style.input_text,\n          children: \"Nombre\"\n        }), _jsx(TextInput, {\n          style: login_style.input,\n          onChangeText: function onChangeText(text) {\n            return setName(text);\n          },\n          value: name\n        }), _jsx(Text, {\n          style: login_style.input_text,\n          children: \"Contrase\\xF1a\"\n        }), _jsxs(View, {\n          style: login_style.input_password,\n          children: [_jsx(TextInput, {\n            style: login_style.input,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            value: password,\n            secureTextEntry: !showPassword\n          }), _jsx(IconButton, {\n            style: login_style.input_icon,\n            icon: showPassword ? 'car-door' : 'car-door-lock',\n            onPress: function onPress() {\n              return setShowPassword(!showPassword);\n            }\n          })]\n        })]\n      }), _jsxs(View, {\n        style: login_style.button_container,\n        children: [_jsx(Button, {\n          style: login_style.button,\n          textColor: \"#ffffff\",\n          onPress: createAccount,\n          children: \"Crear cuenta\"\n        }), _jsx(Button, {\n          style: login_style.button,\n          textColor: \"#ffffff\",\n          onPress: singIn,\n          children: \"Iniciar sesi\\xF3n\"\n        })]\n      })]\n    }), _jsx(Text, {\n      style: [login_style.message, {\n        color: messageColor ? 'green' : 'red'\n      }],\n      children: message\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","Button","IconButton","TextInput","View","Text","Image","useNavigation","login_style","useAppContext","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useAppContext","accounts","setAccounts","navigation","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","name","setName","_useState5","_useState6","password","setPassword","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState10","message","setMessage","_useState11","_useState12","messageColor","setMessageColor","createAccount","test","some","account","concat","_toConsumableArray","clearInputs","singIn","find","navigate","style","container","children","login_container","source","require","image","input_container","input_text","input","onChangeText","text","value","input_password","secureTextEntry","input_icon","icon","onPress","button_container","button","textColor","color"],"sources":["C:/Users/jf25s/OneDrive/Escritorio/Trabajos de moviles III/momento2/momento2/components/login.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nimport { Button, IconButton } from \"react-native-paper\";\r\nimport { TextInput, View, Text, Image } from \"react-native\";\r\n\r\nimport { useNavigation } from '@react-navigation/native'; // Importamos la navegación \"navigation\"\r\n\r\nimport { login_style } from \"../assets/css/login_styles\"; // Importamos el \"login_styles\", de la carpeta \"assets/css\"\r\n\r\nimport { useAppContext } from \"../AppContexts\"; // Importa el contexto que almacena los arrays\r\n\r\nexport default function LoginScreen() {\r\n\r\n    const { accounts, setAccounts } = useAppContext(); // Accede a los datos compartidos desde el contexto\r\n\r\n    const navigation = useNavigation(); // Inicializamos la variable de navegación\r\n\r\n    const [user, setUser] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [message, setMessage] = useState(''); \r\n    const [messageColor, setMessageColor] = useState(false); \r\n\r\n    // Función para crear cuenta\r\n    \r\n    const createAccount = () => {\r\n        \r\n        if (user === \"\" || name === \"\" || password === \"\") {\r\n\r\n            setMessage(\"Debes ingresar todos los campos\")\r\n            setMessageColor(false);\r\n\r\n        } else if (!/^[a-zA-Z0-9]+$/.test(user)) {\r\n\r\n            setMessage(\"El usuario solo puede contener letras y números\");\r\n            setMessageColor(false);\r\n\r\n        } else if (!/^[a-zA-Z\\s]+$/.test(name)) {\r\n\r\n            setMessage(\"El nombre solo puede contener letras y espacios\");\r\n            setMessageColor(false);\r\n\r\n        } else if (!/[a-zA-Z]/.test(password) || !/[0-9]/.test(password)) {\r\n\r\n            setMessage(\"La contraseña debe contener letras y números\");\r\n            setMessageColor(false);\r\n\r\n        } else if (accounts.some((account) => account.user === user)) {\r\n\r\n            setMessage(\"El usuario ya existe\");\r\n            setMessageColor(false);\r\n\r\n        } else {\r\n\r\n            const account = { user, name, password }; // Crear un objeto con los datos de la cuenta\r\n            setAccounts([...accounts, account]); // Actualiza el contexto en lugar del estado local\r\n            clearInputs();\r\n            setMessage(\"Cuenta creada exitosamente\");\r\n            setMessageColor(true);\r\n        } \r\n    };\r\n\r\n    // Función para iniciar sesión\r\n    \r\n    const singIn = () => {\r\n\r\n        const account = accounts.find((account) => account.user === user && account.password === password);\r\n\r\n        if (user === \"\" || password === \"\") {\r\n\r\n            setMessage(\"Debes ingresar el usuario y contraseña\")\r\n            setMessageColor(false);\r\n\r\n        } else if (account) {\r\n\r\n            clearInputs();\r\n            setMessage(\"\")\r\n            navigation.navigate('Car')\r\n\r\n        } else {\r\n\r\n            setMessage(\"El usuario no existe\");\r\n            setMessageColor(false);\r\n        }\r\n    };\r\n\r\n    // Función para limpiar los campos\r\n \r\n    const clearInputs = () => {\r\n        setUser(\"\");\r\n        setName(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    /*\r\n\r\n    Imprimir el array de \"accounts\" en la consola\r\n\r\n    useEffect(() => {\r\n        console.log(accounts);\r\n    }, [accounts]);\r\n\r\n    */\r\n   \r\n    return (\r\n\r\n        <View style={login_style.container}>\r\n\r\n          \r\n\r\n            <View style={login_style.login_container}>\r\n\r\n                  <Image\r\n                source={require('../assets/images/supra.jpg')}\r\n                style={login_style.image} // Establece el ancho y alto de la imagen según tus necesidades\r\n            />\r\n                \r\n                <View style={login_style.input_container}>\r\n\r\n                    {/* Input User */}\r\n\r\n                    <Text style={login_style.input_text}>Usuario</Text>\r\n\r\n                    <TextInput \r\n                        style={login_style.input}\r\n                        onChangeText={(text) => setUser(text)}\r\n                        value={user}\r\n                    />\r\n\r\n                    {/* Input Name */}\r\n\r\n                    <Text style={login_style.input_text}>Nombre</Text>\r\n\r\n                    <TextInput \r\n                        style={login_style.input}\r\n                        onChangeText={(text) => setName(text)}\r\n                        value={name}\r\n                    />    \r\n                    \r\n                    {/* Input Password */}\r\n\r\n                    <Text style={login_style.input_text}>Contraseña</Text>\r\n\r\n                    <View style={login_style.input_password}>\r\n\r\n                        <TextInput \r\n                            style={login_style.input}\r\n                            onChangeText={(text) => setPassword(text)}\r\n                            value={password}\r\n                            secureTextEntry={!showPassword}\r\n                        />  \r\n\r\n                        <IconButton\r\n                            style={login_style.input_icon}\r\n                            icon={showPassword ? 'car-door' : 'car-door-lock'}\r\n                            onPress={() => setShowPassword(!showPassword)}\r\n                        /> \r\n                        \r\n                    </View>\r\n\r\n                </View>\r\n\r\n                <View style={login_style.button_container}> \r\n\r\n                    {/* Boton Crear cuenta */}\r\n\r\n                    <Button\r\n                        style={login_style.button}\r\n                        textColor=\"#ffffff\"\r\n                        onPress={createAccount}\r\n                    >\r\n                        Crear cuenta\r\n                    </Button>\r\n\r\n                    {/* Boton Iniciar sesión */}\r\n\r\n                    <Button\r\n                        style={login_style.button}\r\n                        textColor=\"#ffffff\"\r\n                        onPress={singIn}\r\n                    >\r\n                        Iniciar sesión\r\n                    </Button>\r\n\r\n                </View>\r\n\r\n            </View>\r\n\r\n            {/* Mensaje de exito o error */}\r\n            \r\n            <Text style={[login_style.message, {color: messageColor ? 'green' : 'red'}]}>{message}</Text> \r\n\r\n        </View>\r\n\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}